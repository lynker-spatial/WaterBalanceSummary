[{"path":"/articles/BasinData.html","id":"comparing-model-and-observed-soil-moisture-correlating-the-two-producing-plots-and-maps-for-visualization-","dir":"Articles","previous_headings":"","what":"Comparing Model and Observed Soil Moisture, Correlating the two, Producing plots and maps for visualization.","title":"BasinData","text":"workflow assumes access tnc-dangermond bucket folders contain updated site data Dangermond Preserve. Similar WaterBalance, start need Site Location Basin Data","code":""},{"path":"/articles/BasinData.html","id":"site-data","dir":"Articles","previous_headings":"Comparing Model and Observed Soil Moisture, Correlating the two, Producing plots and maps for visualization.","what":"Site Data","title":"BasinData","text":"assumption already site data fits format:","code":""},{"path":"/articles/BasinData.html","id":"divides","dir":"Articles","previous_headings":"Comparing Model and Observed Soil Moisture, Correlating the two, Producing plots and maps for visualization.","what":"Divides","title":"BasinData","text":"also need bring Basin Divides mapping purposes. get data tnc-dangermond bucket need pull parquet data S3 organize list. Note: already site data, formatted like output CleanWells(), can skip straight Change Storage Model step. Intersect Site Data Divides get dataframe divides sites contain.","code":"#dangermond_sites <- st_intersection(All_Sites_sf, NewDivides)"},{"path":"/articles/BasinData.html","id":"clean-up-the-data-a-bit-","dir":"Articles","previous_headings":"Comparing Model and Observed Soil Moisture, Correlating the two, Producing plots and maps for visualization.","what":"Clean up the data a bit.","title":"BasinData","text":"TNC Site names get wonky replacing spaces underscores, filtering NA values, just pulling Site Divide (used later) fields help. Additionally, creating SiteBasins df just distinct Basin IDs necessary pull. fixed later update","code":"##Join Divides and Sites #ActiveDivides <- dangermond_sites %>%  #  filter(!is.na(SiteName)) %>%  #  mutate(Site = str_replace_all(SiteName, \"_\", \"\")) %>%  #  dplyr::select(Site, Divide, has_flowline)   #Site Basins #SiteBasins <- ActiveDivides %>%  #  dplyr::select(Divide) %>%  #  distinct(Divide)"},{"path":"/articles/BasinData.html","id":"clean-well-data","dir":"Articles","previous_headings":"Comparing Model and Observed Soil Moisture, Correlating the two, Producing plots and maps for visualization.","what":"Clean Well Data","title":"BasinData","text":"CleanWells() function filters, transforms, processes well water level data combined dataset. prepares data mapping analysis calculating changes well water levels, joining basin information, summarizing data monthly basis. output look like , time series data divides containing sites measuring well water level, average change well water level month month:","code":""},{"path":"/articles/BasinData.html","id":"change-in-storage-from-the-model","dir":"Articles","previous_headings":"Comparing Model and Observed Soil Moisture, Correlating the two, Producing plots and maps for visualization.","what":"Change In Storage From the Model","title":"BasinData","text":"Now site data, can use (model)_delta_str file WaterBalance workflow compare two. Correlation() function calculates correlation well water level changes storage changes (e.g., cabcm_ terra_delta_str) different basins. joins data, computes correlation statistics, prepares data analysis. CRITICAL: Correlation() copies “model_correlation_by_divide” package environment, feed straight ModelCorrMap(). still need scatterplot ModelScatter() though don’t skip ahead. output look like , even adds convenient plot titles!  ’ve called dataframe cabcm_dangermond_join, need get fancy. Now data looking good can finally make plots Plot_WWLvsSTR() exactly think . plots change well water level “mean_change_mm” deltaSTR model data.  great visualization accuracy model basin terms timing magnitude changes well water level vs modeled changes soil moisture. want detail, making scatterplot two help, can attach map make even powerful visual aid.","code":"#cabcm_dangermond_join <- Correlation(x = cabcm_delta_str, y = monthly_basin_average) #Cabcm_Plot <- Plot_WWLvsSTR(x = cabcm_dangermond_join)"},{"path":"/articles/BasinData.html","id":"modelscatter","dir":"Articles","previous_headings":"Comparing Model and Observed Soil Moisture, Correlating the two, Producing plots and maps for visualization.","what":"ModelScatter()","title":"BasinData","text":"ModelScatter() uses data , makes scatterplot instead.  good, shows us general shape data correlation easily visible part title. relate spatially basin? ModelCorrMap() uses model_correlation_by_divide, output Correlation() along scatter plot just produced create side--side plot two.","code":"#ModelScatterPlot <- ModelScatter(x = cabcm_dangermond_join) #Corr_Map <- ModelCorrMap(x = model_correlation_by_divide, y = ModelScatterPlot)"},{"path":[]},{"path":"/articles/WaterBalance.html","id":"set-aws-credentials","dir":"Articles","previous_headings":"","what":"Set AWS Credentials","title":"WaterBalance","text":"first step set AWS Credentials Globally can access data held tnc-dangermond bucket.","code":""},{"path":"/articles/WaterBalance.html","id":"define-the-theme","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Define the Theme","title":"WaterBalance","text":"Optional Set common theme plots. want look like examples , can use code chunk:","code":"theme_pers <-function (base_size = 7, base_family = \"\"){   theme(     line = element_line(colour = \"black\", size = 0.3, linetype = 1, lineend = \"butt\"),     rect = element_rect(fill = \"white\", colour = \"black\", size = 0.3, linetype = 1),     text = element_text(family = base_family, face = \"plain\", colour = \"black\", size = base_size, hjust = 0.5, vjust = 0.5, angle = 0, lineheight = 0.9),     axis.text = element_text(size = rel(0.8)),     axis.line = element_blank(),     axis.text.x = element_text(vjust = 1),     axis.text.y = element_text(hjust = 1),     axis.ticks = element_line(),     axis.title.x = element_text(),     axis.title.y = element_text(angle = 90),     axis.ticks.length = unit(1, \"mm\"),     axis.ticks.margin = unit(1, \"mm\"),     legend.background = element_rect(colour = NA),     legend.spacing = unit(-0.5, \"lines\"),     legend.key = element_blank(),     legend.key.size = unit(1.2, \"lines\"),     legend.key.height = NULL,     legend.key.width = NULL,     legend.text = element_text(size = rel(0.8)),     legend.text.align = NULL,     legend.title = element_text(size = rel(0.8), hjust = 0),     legend.title.align = 0.5,     legend.position = \"right\",     legend.direction = NULL,     legend.justification = \"center\",     legend.box = NULL,     panel.background = element_rect(colour = NA),     panel.border = element_rect(fill = NA),     panel.grid.major = element_line(colour = \"grey90\", size = 0.2),     panel.grid.minor = element_blank(),     panel.margin = unit(0.25, \"lines\"),     panel.margin.x = NULL,     panel.margin.y = NULL,     strip.background = element_blank(),     strip.text = element_text(face=\"bold\"),     strip.text.x = element_text(face=\"bold\"),     strip.text.y = element_text(face=\"bold\", angle = -90),     plot.background = element_rect(colour = \"white\"),     plot.title = element_text(size = rel(1.2)),     plot.margin=unit(rep(1, 4), \"mm\"),     complete = TRUE) }"},{"path":"/articles/WaterBalance.html","id":"site-data","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Site Data","title":"WaterBalance","text":"assumption already site data fits format:","code":""},{"path":"/articles/WaterBalance.html","id":"divides","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Divides","title":"WaterBalance","text":"also need bring Basin Divides layer mapping purposes.","code":""},{"path":"/articles/WaterBalance.html","id":"pull-model-data","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Pull Model Data","title":"WaterBalance","text":"data pulls assume access tnc-dangermond bucket folders contain updated model data Dangermond Preserve.","code":""},{"path":"/articles/WaterBalance.html","id":"pull-cabcm-data","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Pull CABCM Data","title":"WaterBalance","text":"CABCMParquetRead() function lists Parquet files specified subfolder within base folder, reads parquet file data frame, stores list, combines data frames list single data frame additional column `file` indicating file row read. end product look like :","code":"#new_cabcm_data <- CABCMParquetRead()"},{"path":"/articles/WaterBalance.html","id":"pull-terraclimate-data","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Pull TerraClimate Data","title":"WaterBalance","text":"TerraClimParquetRead function performs steps CABCMParquetRead() function added step transforms `var` column standardize variable names, changing “q” “run” “soil” “str”","code":"#new_terraclim_data <- TerraParquetRead()"},{"path":"/articles/WaterBalance.html","id":"clean-model-data","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Clean Model Data","title":"WaterBalance","text":"data variable, str, represents soil moisture storage. accurately balance basin’s water budget, need convert total storage change storage two time steps. model_clean() separates soil moisture storage “str” “var” field calculates day day change storage joining data back primary dataset analysis. output cabcm_delta_str terra_delta_str. :  :","code":"#model_clean(new_cabcm_data)"},{"path":"/articles/WaterBalance.html","id":"process-model-data","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Process Model Data","title":"WaterBalance","text":"far great, isn’t accounting error. input system Precipitation, PPT, puts Actual Evapotranspiration, Stream Recharge, Runoff, Change Soil Moisture Storage, can better balance system finding error following equation. ERR = ppt - aet - rch - run - str process_model_data() function . widens dataframe, calculates error timestamp, assigns seasons based month, calculates average error per season, percent error PPT. joins seasonal data NewDivides dataset create spatial dataframe, split four seasonal datasets. final output list containing seasonal data can used generating Percent Error Plots based season.  addition prepping data Seasonal Error plot, function assigns widened data, “cabcm_data_wide” global environment used balance_data() function create water balance plots.","code":"#result_cabcm <- process_model_data(cabcm_delta_str, NewDivides)"},{"path":"/articles/WaterBalance.html","id":"plot-seasons","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Plot Seasons","title":"WaterBalance","text":"plot_seasons() generates standardized plots based seasonal data. plots visualize percent error across different spatial features given season. function designed used within GridSeasons() function arrange plots grid layout. can customize suits , found format appealing visually.","code":"PlotSeason <- function(SeasonData, season_name) {   ggplot() +     annotation_map_tile(type = \"osm\", zoomin = 1) +     coord_sf(crs = st_crs(26910)) +     ggtitle(glue(\"{season_name}\")) +  # Use the season name for the title     geom_sf(data = filter(SeasonData, type != \"coastal\"), color = \"grey\", aes(fill = percent_error)) +     labs(fill = \"Percent Error\") +     scale_fill_gradient(low = \"white\", high = \"red4\") +      theme(axis.text.x = element_text(angle = 45, hjust = 1),           plot.title = element_text(face = \"bold\"),           plot.subtitle = element_text(hjust = 0.5)) }"},{"path":"/articles/WaterBalance.html","id":"seasons-plot","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Seasons Plot","title":"WaterBalance","text":"GridSeasons() arranges formats seasonal plots generated PlotSeason function 2x2 grid layout. uses output process_model_data() customizes plot titles captions based data source, CABCM, Terra, (pending) NextGen","code":"#SeasonsPlot <- GridSeasons(result_cabcm)"},{"path":"/articles/WaterBalance.html","id":"balance-data","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Balance Data()","title":"WaterBalance","text":"balance_data() relies terra_ cabcm_data_wide process_data() function . formats data can used create Water Balance Plots. new data look like :","code":""},{"path":"/articles/WaterBalance.html","id":"water-balance-plots","dir":"Articles","previous_headings":"Set AWS Credentials","what":"Water Balance Plots","title":"WaterBalance","text":"CreateWaterBalancePlot() uses output balance_data(), terra_ cabcm_long_balance, creates water balance plot comparing inputs outputs system.","code":"#combined_plot <- CreateWaterBalancePlot(x = terra_long_balance)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Billy McLean. Author, maintainer. . Funder. . Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McLean B (2024). WaterBalanceSummary: Water Balance Summary. R package version 0.1.0, https://wamclean.github.io/WaterBalanceSummary/, https://github.com/wamclean/WaterBalanceSummary.","code":"@Manual{,   title = {WaterBalanceSummary: Water Balance Summary},   author = {Billy McLean},   year = {2024},   note = {R package version 0.1.0, https://wamclean.github.io/WaterBalanceSummary/},   url = {https://github.com/wamclean/WaterBalanceSummary}, }"},{"path":"/index.html","id":"waterbalancesummary","dir":"","previous_headings":"","what":"NOAA's Enterprise Hydrofabric Solution","title":"NOAA's Enterprise Hydrofabric Solution","text":"goal WaterBalanceSummary create water balance plots, seasonal error plots, compare well water level soil moisture aggregated meteorological data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"NOAA's Enterprise Hydrofabric Solution","text":"can install development version WaterBalanceSummary GitHub :","code":"# install.packages(\"pak\") pak::pak(\"lynker-spatial/WaterBalanceSummary\")"},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/CABCMParquetRead.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Combine Parquet Files into a Single Data Frame — CABCMParquetRead","title":"Read and Combine Parquet Files into a Single Data Frame — CABCMParquetRead","text":"function reads Parquet files specified S3 bucket combines single data frame.","code":""},{"path":"/reference/CABCMParquetRead.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Combine Parquet Files into a Single Data Frame — CABCMParquetRead","text":"","code":"CABCMParquetRead(   sub = \"cabcm\",   bucket = \"tnc-dangermond\",   prefix = \"water_balance/v2/\" )"},{"path":"/reference/CABCMParquetRead.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Combine Parquet Files into a Single Data Frame — CABCMParquetRead","text":"sub character string specifying subfolder within base folder look Parquet files. Default \"cabcm\". bucket string representing S3 bucket name. prefix string representing prefix (path) within S3 bucket Parquet files stored.","code":""},{"path":"/reference/CABCMParquetRead.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Combine Parquet Files into a Single Data Frame — CABCMParquetRead","text":"data frame containing combined data Parquet files specified subfolder. row combined data frame additional column named `file` indicating source file data.","code":""},{"path":"/reference/CABCMParquetRead.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and Combine Parquet Files into a Single Data Frame — CABCMParquetRead","text":"`CABCMParquetRead` function performs following steps: Lists Parquet files specified subfolder within base folder `\"/Users/wamclean/Desktop/Lynker/tnc_hf/water_balance/\"`. Reads Parquet file data frame stores list. Combines data frames list single data frame additional column `file` indicating file row read.","code":""},{"path":"/reference/CABCMParquetRead.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and Combine Parquet Files into a Single Data Frame — CABCMParquetRead","text":"","code":"# Read and combine all Parquet files from the \"cabcm\" subfolder new_cabcm_data <- CABCMParquetRead() #> List of 4 #>  $ Code     : chr \"AccessDenied\" #>  $ Message  : chr \"Access Denied\" #>  $ RequestId: chr \"0QAXEN8A40CS53F8\" #>  $ HostId   : chr \"KFHKVenWONY7R0JriXJpH7StDo8fxzKnzw800s+a11Ura5hGdjiW0hQrs0sd4ciMmTvVYVch8ug=\" #>  - attr(*, \"headers\")=List of 7 #>   ..$ x-amz-bucket-region: chr \"us-west-2\" #>   ..$ x-amz-request-id   : chr \"0QAXEN8A40CS53F8\" #>   ..$ x-amz-id-2         : chr \"KFHKVenWONY7R0JriXJpH7StDo8fxzKnzw800s+a11Ura5hGdjiW0hQrs0sd4ciMmTvVYVch8ug=\" #>   ..$ content-type       : chr \"application/xml\" #>   ..$ transfer-encoding  : chr \"chunked\" #>   ..$ date               : chr \"Fri, 11 Oct 2024 19:27:12 GMT\" #>   ..$ server             : chr \"AmazonS3\" #>   ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\" #>  - attr(*, \"class\")= chr \"aws_error\" #> NULL #> Error in parse_aws_s3_response(r, Sig, verbose = verbose): Forbidden (HTTP 403).  # Read and combine all Parquet files from a different subfolder other_data <- CABCMParquetRead(sub = \"another_subfolder\") #> List of 4 #>  $ Code     : chr \"AccessDenied\" #>  $ Message  : chr \"Access Denied\" #>  $ RequestId: chr \"0QAK7A22R8S8SV7V\" #>  $ HostId   : chr \"RHmO/HxrBZXHdbqTgkb6NT8/qW3qsPk5IS8U5NZRXmpHWaRhqt18I3//fO6bT1DrVzC+Dt87kno=\" #>  - attr(*, \"headers\")=List of 7 #>   ..$ x-amz-bucket-region: chr \"us-west-2\" #>   ..$ x-amz-request-id   : chr \"0QAK7A22R8S8SV7V\" #>   ..$ x-amz-id-2         : chr \"RHmO/HxrBZXHdbqTgkb6NT8/qW3qsPk5IS8U5NZRXmpHWaRhqt18I3//fO6bT1DrVzC+Dt87kno=\" #>   ..$ content-type       : chr \"application/xml\" #>   ..$ transfer-encoding  : chr \"chunked\" #>   ..$ date               : chr \"Fri, 11 Oct 2024 19:27:12 GMT\" #>   ..$ server             : chr \"AmazonS3\" #>   ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\" #>  - attr(*, \"class\")= chr \"aws_error\" #> NULL #> Error in parse_aws_s3_response(r, Sig, verbose = verbose): Forbidden (HTTP 403)."},{"path":"/reference/CleanSites.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and Process Site Data for Spatial Analysis — CleanSites","title":"Clean and Process Site Data for Spatial Analysis — CleanSites","text":"function creates processes spatial layers divides, flow paths, sites intersect divides. reads spatial data GeoPackage performs spatial operations intersection joining.","code":""},{"path":"/reference/CleanSites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and Process Site Data for Spatial Analysis — CleanSites","text":"","code":"CleanSites(x)"},{"path":"/reference/CleanSites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and Process Site Data for Spatial Analysis — CleanSites","text":"x simple features (SF) object representing site locations.","code":""},{"path":"/reference/CleanSites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and Process Site Data for Spatial Analysis — CleanSites","text":"function return value. Instead, assigns three spatial layers global environment: `NewDivides`: simple features (SF) object representing divides, transformed CRS EPSG:4269. `dangermond_sites`: intersection provided site locations divides. `dangermond_sites`: result joining `dangermond_sites` `NewDivides`.","code":""},{"path":"/reference/CleanSites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean and Process Site Data for Spatial Analysis — CleanSites","text":"`CleanSites` function performs following steps: Reads spatial data `nextgen_hydorfabric.gpkg` GeoPackage, specifically `divides` layer. Transforms CRS `divides` layer EPSG:4269 stores variable `NewDivides`. Computes intersection input site data (`x`) `NewDivides` stores result `dangermond_sites`. Joins intersected sites (`dangermond_sites`) `NewDivides` updates `dangermond_sites` variable.","code":""},{"path":"/reference/CleanWells.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and Process Well Water Level Data — CleanWells","title":"Clean and Process Well Water Level Data — CleanWells","text":"function filters, transforms, processes well water level data combined dataset. prepares data mapping analysis calculating changes well water levels, joining basin information, summarizing data monthly basis.","code":""},{"path":"/reference/CleanWells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and Process Well Water Level Data — CleanWells","text":"","code":"CleanWells(x = all_combined_data, y = ActiveDivides)"},{"path":"/reference/CleanWells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and Process Well Water Level Data — CleanWells","text":"x data frame containing well water level data. Defaults `all_combined_data`. y spatial data frame containing basin information. Defaults `ActiveDivides`.","code":""},{"path":"/reference/CleanWells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and Process Well Water Level Data — CleanWells","text":"data frame monthly averages change well water levels basin. output includes: Divide divide ID. date first day month average calculated. mean_change_mm mean change well water level millimeters.","code":""},{"path":"/reference/Correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Correlation Between Well Water Level Change and Soil Moisture Storage Change — Correlation","title":"Calculate Correlation Between Well Water Level Change and Soil Moisture Storage Change — Correlation","text":"function calculates correlation well water level changes storage changes (e.g., cabcm_ terra_delta_str) different basins. joins data, computes correlation statistics, prepares data analysis.","code":""},{"path":"/reference/Correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Correlation Between Well Water Level Change and Soil Moisture Storage Change — Correlation","text":"","code":"Correlation(x, y = monthly_basin_average)"},{"path":"/reference/Correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Correlation Between Well Water Level Change and Soil Moisture Storage Change — Correlation","text":"x data frame containing storage change data columns including `var`, `value`, `date`, `divide_id`. Defaults `cabcm_delta_str` `terra_delta_str` different datasets. y data frame monthly averages well water level changes, typically produced `CleanWells` function. Defaults `monthly_basin_average`.","code":""},{"path":"/reference/Correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Correlation Between Well Water Level Change and Soil Moisture Storage Change — Correlation","text":"data frame following columns: Divide divide ID. date date observation. mean_change_mm mean change well water level millimeters. deltaSTR change storage storage change data. correlation correlation coefficient `mean_change_mm` `deltaSTR`. plot_titles Titles plots including divide ID correlation coefficient.","code":""},{"path":"/reference/CreateWaterBalancePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Water Balance Plot — CreateWaterBalancePlot","title":"Create Water Balance Plot — CreateWaterBalancePlot","text":"function generates water balance plot using data frame long format. refactors variable names, sums total values variables accurately reflect inputs outputs, creates faceted plots different variables. function handles data CABCM Terra Climate datasets, producing combined plot shows faceted bar plots total water balance.","code":""},{"path":"/reference/CreateWaterBalancePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Water Balance Plot — CreateWaterBalancePlot","text":"","code":"CreateWaterBalancePlot(x)"},{"path":"/reference/CreateWaterBalancePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Water Balance Plot — CreateWaterBalancePlot","text":"x data frame long format (e.g., output `balance_data()`), containing columns `divide_id`, `var`, `value`, `lab`. data specific either CABCM Terra Climate.","code":""},{"path":"/reference/CreateWaterBalancePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Water Balance Plot — CreateWaterBalancePlot","text":"function return value. displays prints combined plot consisting : faceted bar plot showing summed values variable, facetted `lab` column. combined bar plot showing positive negative values variables, different colors variable.","code":""},{"path":"/reference/CreateWaterBalancePlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Water Balance Plot — CreateWaterBalancePlot","text":"`CreateWaterBalancePlot` function performs following operations: **Data Refactoring**: Reorders data assigns labels variables. **Faceted Bar Plot**: Creates faceted bar plot showing summed values variable `divide_id`. **Combined Water Balance Plot**: Generates stacked bar plot combining positive negative values custom color palettes CABCM Terra Climate datasets. **Color Mapping**: Uses custom color palettes differentiate various variables. **Plot Combination**: Combines faceted total water balance plots single grid layout.","code":""},{"path":"/reference/ModelCorrMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Map of Correlations Between Well Water Level and Model Recharge — ModelCorrMap","title":"Create a Map of Correlations Between Well Water Level and Model Recharge — ModelCorrMap","text":"function generates map visualizing correlation well water level changes model-reported recharge. colors divides based whether correlation positive negative. also combines map scatter plot showing relationship well water levels model recharge.","code":""},{"path":"/reference/ModelCorrMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Map of Correlations Between Well Water Level and Model Recharge — ModelCorrMap","text":"","code":"ModelCorrMap(x = model_correlation_by_divide, y = ModelScatterPlot)"},{"path":"/reference/ModelCorrMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Map of Correlations Between Well Water Level and Model Recharge — ModelCorrMap","text":"x data frame resulting `Correlation()` function, containing: Divide divide ID. correlation correlation coefficient `mean_change_mm` `deltaSTR`. y `ggplot` object produced `ModelScatter` function, representing scatter plot well water level change vs. model recharge.","code":""},{"path":"/reference/ModelCorrMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Map of Correlations Between Well Water Level and Model Recharge — ModelCorrMap","text":"combined `ggplot` object correlation map scatter plot side side.","code":""},{"path":"/reference/ModelCorrMap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Map of Correlations Between Well Water Level and Model Recharge — ModelCorrMap","text":"function takes output `Correlation()` function uses create map highlights divides positive negative correlations. adds labels includes various map features like scale north arrow. combined map scatter plot provide comprehensive view correlation analysis.","code":""},{"path":"/reference/ModelScatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Scatter Plot Comparing Well Water Level Change and Model Recharge — ModelScatter","title":"Create a Scatter Plot Comparing Well Water Level Change and Model Recharge — ModelScatter","text":"function generates scatter plot comparing well water level changes (`mean_change_mm`) model-reported change storage (`deltaSTR`) different data sources.","code":""},{"path":"/reference/ModelScatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Scatter Plot Comparing Well Water Level Change and Model Recharge — ModelScatter","text":"","code":"ModelScatter(x)"},{"path":"/reference/ModelScatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Scatter Plot Comparing Well Water Level Change and Model Recharge — ModelScatter","text":"x data frame must include: mean_change_mm mean change well water level millimeters. deltaSTR change storage model. plot_titles Titles facets, usually including divide ID correlation coefficient. source data source (e.g., CABCM, TerraClim).","code":""},{"path":"/reference/ModelScatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Scatter Plot Comparing Well Water Level Change and Model Recharge — ModelScatter","text":"`ggplot` object showing scatter plot comparing well water levels model storage changes.","code":""},{"path":"/reference/ModelScatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Scatter Plot Comparing Well Water Level Change and Model Recharge — ModelScatter","text":"scatter plot displays relationship well water level changes model storage changes, separate facets set plot titles. plot helps visualizing well model predictions align observed changes.","code":""},{"path":"/reference/PlotSeason.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Seasons — PlotSeason","title":"Plot Seasons — PlotSeason","text":"function generates standardized plots Dangermond Preserve based seasonal data. plots visualize percent error across different spatial features given season. function designed used within `GridSeasons()` function arrange plots grid layout.","code":""},{"path":"/reference/PlotSeason.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Seasons — PlotSeason","text":"","code":"PlotSeason(SeasonData, season_name)"},{"path":"/reference/PlotSeason.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Seasons — PlotSeason","text":"SeasonData spatial dataframe containing seasonal data columns `percent_error` `type`. data output `process_model_data()` function. season_name character string representing name season (e.g., \"Winter\", \"Spring\", \"Summer\", \"Fall\"). used title plot.","code":""},{"path":"/reference/PlotSeason.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Seasons — PlotSeason","text":"`ggplot` object displaying percent error across spatial features Dangermond Preserve specified season.","code":""},{"path":"/reference/PlotSeason.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Seasons — PlotSeason","text":"`PlotSeason` function performs following operations: **Plot Creation**: Generates ggplot object map tile background, using OpenStreetMap data. **Coordinate System**: Uses spatial coordinate reference system `st_crs(26910)`. **Visualization**: Plots spatial data `percent_error` values visualized using gradient color scale white dark red. **Title**: Sets plot title provided `season_name`.","code":""},{"path":"/reference/Plot_WWLvsSTR.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Change in Well Water Level vs Model Recharge — Plot_WWLvsSTR","title":"Plot Change in Well Water Level vs Model Recharge — Plot_WWLvsSTR","text":"function generates bar plot comparing well water level changes (`mean_change_mm`) model-reported change storage (`deltaSTR`) different divides.","code":""},{"path":"/reference/Plot_WWLvsSTR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Change in Well Water Level vs Model Recharge — Plot_WWLvsSTR","text":"","code":"Plot_WWLvsSTR(x)"},{"path":"/reference/Plot_WWLvsSTR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Change in Well Water Level vs Model Recharge — Plot_WWLvsSTR","text":"x data frame must include: date date observation. mean_change_mm mean change well water level millimeters. deltaSTR change storage model. Divide divide ID. source data source (e.g., CABCM, TerraClim).","code":""},{"path":"/reference/Plot_WWLvsSTR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Change in Well Water Level vs Model Recharge — Plot_WWLvsSTR","text":"`ggplot` object showing bar plot well water levels model storage changes.","code":""},{"path":"/reference/Plot_WWLvsSTR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Change in Well Water Level vs Model Recharge — Plot_WWLvsSTR","text":"plot displays well water level changes model-reported storage changes time, separate facets divide. fill color distinguishes recharge delta storage.","code":""},{"path":"/reference/SiteData.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and Clean Site Data for Spatial Analysis — SiteData","title":"Import and Clean Site Data for Spatial Analysis — SiteData","text":"function reads site location data, either provided data frame loaded included package dataset, cleans , converts simple features (SF) object spatial analysis.","code":""},{"path":"/reference/SiteData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and Clean Site Data for Spatial Analysis — SiteData","text":"","code":"SiteData(x = NULL)"},{"path":"/reference/SiteData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and Clean Site Data for Spatial Analysis — SiteData","text":"x data frame containing site location data columns station IDs, elevation, site names, coordinates. `NULL`, function load `SiteLocations` dataset package.","code":""},{"path":"/reference/SiteData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and Clean Site Data for Spatial Analysis — SiteData","text":"simple features (SF) object site data including coordinates spatial reference.","code":""},{"path":"/reference/SiteData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import and Clean Site Data for Spatial Analysis — SiteData","text":"`SiteData` function performs following steps: input data provided (`x = NULL`), loads `SiteLocations` dataset `TNCDangermond` package. Converts `station_id_dendra`, `elev`, `SiteName` columns character type. Cleans `station_id_dendra` `elev` columns, handling missing values inconsistencies. Transforms `SiteName` replace spaces underscores. Filters rows `SiteName` starts \"Dangermond\" excludes containing \"Weather\". Converts cleaned data SF object coordinates defined `lon` `lat`, sets coordinate reference system (CRS) EPSG:4269.","code":""},{"path":"/reference/TerraClimParquetRead.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Combine Terra Climate Parquet Files into a Single Data Frame — TerraClimParquetRead","title":"Read and Combine Terra Climate Parquet Files into a Single Data Frame — TerraClimParquetRead","text":"function reads Parquet files specified S3 bucket related Terra Climate data combines single data frame. also performs specific transformations `var` column standardize variable names.","code":""},{"path":"/reference/TerraClimParquetRead.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Combine Terra Climate Parquet Files into a Single Data Frame — TerraClimParquetRead","text":"","code":"TerraClimParquetRead(   sub = \"terraclim\",   bucket = \"tnc-dangermond\",   prefix = \"water_balance/v2/\" )"},{"path":"/reference/TerraClimParquetRead.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Combine Terra Climate Parquet Files into a Single Data Frame — TerraClimParquetRead","text":"sub character string specifying subfolder within base folder look Parquet files. Default \"terraclim\". bucket string representing S3 bucket name. prefix string representing prefix (path) within S3 bucket Parquet files stored.","code":""},{"path":"/reference/TerraClimParquetRead.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Combine Terra Climate Parquet Files into a Single Data Frame — TerraClimParquetRead","text":"data frame containing combined data Parquet files specified subfolder. `var` column standardized values \"run\" \"q\" \"str\" \"soil\".","code":""},{"path":"/reference/TerraClimParquetRead.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and Combine Terra Climate Parquet Files into a Single Data Frame — TerraClimParquetRead","text":"`TerraClimParquetRead` function performs following steps: Lists Parquet files specified subfolder within base folder `\"/data/water_balance/\"`. Reads Parquet file data frame stores list. Combines data frames list single data frame additional column `file` indicating file row read. Transforms `var` column standardize variable names, changing \"q\" \"run\" \"soil\" \"str\".","code":""},{"path":"/reference/balance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance Data — balance_data","title":"Balance Data — balance_data","text":"function transforms input data wide long format, calculates errors, adjusts variable values needed, filters data based variables used water balance calculations. Specifically, makes AET, RCH, RUN negative can subtracted PPT rather added. processed data saved global environment specific names depending variables present.","code":""},{"path":"/reference/balance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance Data — balance_data","text":"","code":"balance_data(x)"},{"path":"/reference/balance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance Data — balance_data","text":"x data frame wide format, typically containing columns `divide_id`, `date`, `source`, various water balance variables (e.g., `ppt`, `aet`, `rch`, `run`, `str`, `ERR`). data result previous processing step `model_clean()`.","code":""},{"path":"/reference/balance_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance Data — balance_data","text":"function return value. saves processed data global environment following names: **\"cabcm_TimeSeries\"**: Contains data variables relevant CABCM, including `aet`, `rch`, `run`, `str` applicable. **\"terra_TimeSeries\"**: Contains data variables relevant TerraClim, excluding `rch`.","code":""},{"path":"/reference/balance_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balance Data — balance_data","text":"`balance_data` function performs following operations: **Convert Long Format**: Uses `pivot_longer` transform wide-format data long format. **Filter Adjust Data**: Filters data keep relevant variables multiplies values specific variables -1 facilitate subtraction `ppt`. **Save Global Environment**: Depending presence `rch` variable, function saves processed data global environment appropriate name future use.","code":""},{"path":"/reference/model_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and Process Model Data — model_clean","title":"Clean and Process Model Data — model_clean","text":"function processes model data separating soil moisture storage dataset, calculating changes storage, combining information back original data.","code":""},{"path":"/reference/model_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and Process Model Data — model_clean","text":"","code":"model_clean(x)"},{"path":"/reference/model_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and Process Model Data — model_clean","text":"x data frame acquired `CABCMParquetRead()` `TerraClimParquetRead()` function. data frame include columns `divide_id`, `var`, `date`, `value`, `source`.","code":""},{"path":"/reference/model_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and Process Model Data — model_clean","text":"data frame containing combined cleaned data. dataset includes: Data points `var` \"str\", including columns `divide_id`, `var`, `date`, `value`, `source`. Calculated changes soil moisture storage `var` \"str\", computed day--day difference `value`. combined data appropriate renaming omission missing values.","code":""},{"path":"/reference/model_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean and Process Model Data — model_clean","text":"`model_clean` function performs following steps: Filters data points `var` \"str\" retains columns needed. data points `var` \"str\", calculates day--day change soil moisture storage. Renames calculated changes combines cleaned data original dataset.","code":""},{"path":"/reference/process_divide_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Data for a List of Divide IDs — process_divide_ids","title":"Process Data for a List of Divide IDs — process_divide_ids","text":"function processes data list divide IDs selecting corresponding basins reading associated parquet files S3. data combined single data frame.","code":""},{"path":"/reference/process_divide_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Data for a List of Divide IDs — process_divide_ids","text":"","code":"process_divide_ids(divide_ids, bucket_name, prefix, region)"},{"path":"/reference/process_divide_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Data for a List of Divide IDs — process_divide_ids","text":"divide_ids character vector containing divide IDs process. bucket_name character string representing name S3 bucket. prefix character string representing prefix path S3 bucket. region character string representing AWS region. Default `\"us-west-2\"`.","code":""},{"path":"/reference/process_divide_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Data for a List of Divide IDs — process_divide_ids","text":"data frame containing combined data divide IDs.","code":""},{"path":"/reference/process_model_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Model Data — process_model_data","title":"Process Model Data — process_model_data","text":"function processes output `model_clean()`. widens dataframe, calculates error timestamp, assigns seasons based month, calculates average error per season, percent error PPT. joins seasonal data `NewDivides` dataset create spatial dataframe, split four seasonal datasets. final output list containing seasonal data can used generating Percent Error Plots based season. Additionally, function assigns processed data global environment.","code":""},{"path":"/reference/process_model_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Model Data — process_model_data","text":"","code":"process_model_data(data, NewDivides)"},{"path":"/reference/process_model_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Model Data — process_model_data","text":"data data frame resulting `model_clean()` function. contain columns `divide_id`, `var`, `date`, `value`, `source`. NewDivides spatial dataframe containing divide information, read `nextgen_hydrofabric.gpkg` file.","code":""},{"path":"/reference/process_model_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Model Data — process_model_data","text":"list containing four data frames: `Winter`, `Spring`, `Summer`, `Fall`. dataframe includes average seasonal error percent error data, joined spatial information `NewDivides`.","code":""},{"path":"/reference/process_model_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process Model Data — process_model_data","text":"`process_model_data` function performs following steps: **Pivot Wider**: Reshapes data separate columns variable calculates error (ERR) difference predicted actual values. **Assign Global Environment**: Stores wide-format data global environment name `cabcm_data_wide` `terra_data_wide`, depending dataset. **Season Assignment**: Adds season column data based month extracted date. **Calculate Seasonal Error**: Computes average seasonal error percentage error. **Join Split**: Joins error data `NewDivides`, splits data seasonal dataframes.","code":""},{"path":"/reference/read_parquet_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Parquet Files from S3 — read_parquet_files","title":"Read Parquet Files from S3 — read_parquet_files","text":"function lists reads parquet files S3 bucket given set site names. data processed group date summarize numeric columns.","code":""},{"path":"/reference/read_parquet_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Parquet Files from S3 — read_parquet_files","text":"","code":"read_parquet_files(site_names, bucket_name, prefix, region = \"us-west-2\")"},{"path":"/reference/read_parquet_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Parquet Files from S3 — read_parquet_files","text":"site_names character vector containing site names read parquet files. bucket_name character string representing name S3 bucket. prefix character string representing prefix path S3 bucket. region character string representing AWS region. Default `\"us-west-2\"`.","code":""},{"path":"/reference/read_parquet_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Parquet Files from S3 — read_parquet_files","text":"data frame containing combined data parquet files, grouped date.","code":""},{"path":"/reference/select_basin.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Basin — select_basin","title":"Select Basin — select_basin","text":"function filters dataset divides (`NewDivides`) specified `divide_id` selects corresponding basin. finds sites within basin dataset `All_Sites_sf`.","code":""},{"path":"/reference/select_basin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Basin — select_basin","text":"","code":"select_basin(divide = \"\")"},{"path":"/reference/select_basin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Basin — select_basin","text":"divide character string representing `divide_id` filter . Default empty string.","code":""},{"path":"/reference/select_basin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Basin — select_basin","text":"data frame containing sites (`All_Sites_sf`) within specified basin.","code":""},{"path":"/reference/theme_pers.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom ggplot2 Theme for Consistent Plot Styling — theme_pers","title":"Custom ggplot2 Theme for Consistent Plot Styling — theme_pers","text":"function creates custom `ggplot2` theme consistent plot styling across graphics. adjusts various elements plot including text, axes, legend, background provide clean professional appearance. theme can applied `ggplot2` plot ensure uniform formatting.","code":""},{"path":"/reference/theme_pers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom ggplot2 Theme for Consistent Plot Styling — theme_pers","text":"","code":"theme_pers(base_size = 7, base_family = \"\")"},{"path":"/reference/theme_pers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom ggplot2 Theme for Consistent Plot Styling — theme_pers","text":"base_size numeric value specifying base font size text elements. Default 7. base_family character string specifying base font family text elements. Default empty string, uses default font.","code":""},{"path":"/reference/theme_pers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom ggplot2 Theme for Consistent Plot Styling — theme_pers","text":"`ggplot2` theme object customized settings plot elements.","code":""},{"path":"/reference/theme_pers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Custom ggplot2 Theme for Consistent Plot Styling — theme_pers","text":"`theme_pers` function modifies following elements: `line`: Line color, size, style. `rect`: Rectangle background border. `text`: Font family, size, color text elements. `axis.text`: Size axis text. `axis.line`: Visibility axis lines. `axis.ticks`: Style size axis ticks. `legend`: Customization legend appearance positioning. `panel`: Background, border, grid lines plot panel. `strip`: Background text styling facet labels. `plot`: Overall background, title size, margin settings.","code":""}]
